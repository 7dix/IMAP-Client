# test_Makefile
CXX = g++
CXXFLAGS = -std=c++17 -Wall -Wextra -pthread -g
LDFLAGS = -lssl -lcrypto -lgtest -lgtest_main -lgmock -L/usr/local/lib 
CPPFLAGS = -I/usr/local/opt/openssl/include -I/usr/local/include

SRC_DIR = src
OBJ_DIR = obj
BIN_DIR = bin
TEST_DIR = tests

# List of source and test files
SRC_SOURCES = $(SRC_DIR)/ArgumentsParser.cpp $(SRC_DIR)/AuthReader.cpp $(SRC_DIR)/ImapClient.cpp $(SRC_DIR)/ImapParser.cpp $(SRC_DIR)/FileHandler.cpp
TEST_SOURCES = $(TEST_DIR)/main_test.cpp $(TEST_DIR)/ArgumentsParser_test.cpp $(TEST_DIR)/AuthReader_test.cpp $(TEST_DIR)/ImapClient_test.cpp $(TEST_DIR)/ImapParser_test.cpp
SOURCES = $(SRC_SOURCES) $(TEST_SOURCES)

# Adjust OBJECTS variable to place .o files in the obj directory
OBJECTS = $(SOURCES:%.cpp=$(OBJ_DIR)/%.o)
TEST_EXECUTABLE = $(BIN_DIR)/test_runner

all: $(TEST_EXECUTABLE)

# Rule to link all .o files into the final test executable
$(TEST_EXECUTABLE): $(OBJECTS)
	@mkdir -p $(BIN_DIR)
	$(CXX) $(CXXFLAGS) $(OBJECTS) -o $@ $(LDFLAGS)

# Rule to compile source files into .o files in the obj directory
$(OBJ_DIR)/%.o: %.cpp
	@mkdir -p $(OBJ_DIR)/$(SRC_DIR) $(OBJ_DIR)/$(TEST_DIR)
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c $< -o $@

# Command to run tests
run_tests: $(TEST_EXECUTABLE)
	$(TEST_EXECUTABLE) --gtest_break_on_failure=0 --gtest_catch_exceptions=1

# Clean up all compiled files and directories
clean:
	rm -rf $(OBJ_DIR) $(BIN_DIR)

.PHONY: all clean run_tests